version: "3.9"
services:
  postgres:
    container_name: postgres
    image: postgres:11.15
    privileged: true
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=123456
      - TZ=Asia/Shanghai
    volumes:
      - /Users/zhumenggang/zhu_work/go/src/docker/postsql/data:/var/lib/postgresql/data
    networks:
      - app-tier
    restart: always
#  mongo:
#    container_name: mongo
#    image: mongo:4.4
#    privileged: true
#    ports:
#      - 27017:27017
#    environment:
#      - MONGO_INITDB_DATABASE=mogo
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=123456
#    volumes:
#      - /Users/zhumenggang/zhu_work/go/src/docker/mogo/data:/data/db
#      - /Users/zhumenggang/zhu_work/go/src/docker/mogo/config/mongod.conf:/etc/mongod.conf
#      - /Users/zhumenggang/zhu_work/go/src/docker/log:/var/log/mongodb
#    networks:
#      - app-tier
#    restart: always
#  mariadb:
#      container_name: mariadb
#      image: mariadb:10.4.7
#      privileged: true
#      ports:
#        # 端口映射
#        - 3308:3306
#      volumes:
#        # 容器与宿主机时间同步
#        - /etc/localtime:/etc/localtime
#        # 数据库目录映射
#        - /Users/zhumenggang/zhu_work/go/src/docker/mariadb/data:/var/lib/mysql
#        # （推荐）如果要使用自定义的MySQL配置，则可以在主机上的目录中创建备用配置文件，然后将该目录位置/etc/mysql/conf.d安装在mariadb容器内。自己所需的配置文件可以放在自己服务器./config/data/mariadb-config里面
#        - /Users/zhumenggang/zhu_work/go/src/docker/mariadb/config:/etc/mysql/conf.d
#        - /Users/zhumenggang/zhu_work/go/src/docker/mariadb/log:/var/log
#      environment:
#        TIME_ZONE: Asia/Shanghai
#        MYSQL_ROOT_PASSWORD: 123456
#      networks:
#          - app-tier
#      restart: always
#  informix:
#      container_name: informix
#      image: ibmcom/informix-developer-database
#      privileged: true
#      ports:
#        - 9088:9088
#        - 9089:9089
#        - 27017:27017
#        - 27018:27018
#        - 27883:27883
#      environment:
#          LICENSE: accept
#      networks:
#          - app-tier
#      restart: always
#  redis:
#    container_name: redis
#    image: redis
#    privileged: true
#    ports:
#      - "6379:6379"
#    environment:
#      TZ: Asia/Shanghai
#    volumes:
#      - /Users/zhumenggang/zhu_work/go/src/docker/redis/data:/data
#      - /Users/zhumenggang/zhu_work/go/src/docker/redis/conf/redis.conf:/etc/redis/redis.conf
#      - /Users/zhumenggang/zhu_work/go/src/docker/redis/logs:/logs
#    networks:
#      - app-tier
#    command: ["redis-server","/etc/redis/redis.conf"]
#    restart: always
#  oracle11g:
#    container_name: oracle11g
#    image: deepdiver/docker-oracle-xe-11g
#    privileged: true
#    ports:
#      - "1521:1521"
#      - "5500:5500"
#    networks:
#      - app-tier
#    restart: always
#  sybase:
#    container_name: sybase157
#    image: ifnazar/sybase_15_7
#    privileged: true
#    ports:
#      - 5000:5000
#    environment:
#      - SYBASE_SA_PASSWORD=123456
#    networks:
#      - app-tier
#    restart: always
networks:
  app-tier:
    name: app-tier
    driver: bridge